package com.ysten.ystenreport.greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.ysten.ystenreport.bean.SaveCrashBean;
import com.ysten.ystenreport.bean.ReportMaxAndCountBean;

import com.ysten.ystenreport.greendao.SaveCrashBeanDao;
import com.ysten.ystenreport.greendao.ReportMaxAndCountBeanDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig saveCrashBeanDaoConfig;
    private final DaoConfig reportMaxAndCountBeanDaoConfig;

    private final SaveCrashBeanDao saveCrashBeanDao;
    private final ReportMaxAndCountBeanDao reportMaxAndCountBeanDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        saveCrashBeanDaoConfig = daoConfigMap.get(SaveCrashBeanDao.class).clone();
        saveCrashBeanDaoConfig.initIdentityScope(type);

        reportMaxAndCountBeanDaoConfig = daoConfigMap.get(ReportMaxAndCountBeanDao.class).clone();
        reportMaxAndCountBeanDaoConfig.initIdentityScope(type);

        saveCrashBeanDao = new SaveCrashBeanDao(saveCrashBeanDaoConfig, this);
        reportMaxAndCountBeanDao = new ReportMaxAndCountBeanDao(reportMaxAndCountBeanDaoConfig, this);

        registerDao(SaveCrashBean.class, saveCrashBeanDao);
        registerDao(ReportMaxAndCountBean.class, reportMaxAndCountBeanDao);
    }
    
    public void clear() {
        saveCrashBeanDaoConfig.clearIdentityScope();
        reportMaxAndCountBeanDaoConfig.clearIdentityScope();
    }

    public SaveCrashBeanDao getSaveCrashBeanDao() {
        return saveCrashBeanDao;
    }

    public ReportMaxAndCountBeanDao getReportMaxAndCountBeanDao() {
        return reportMaxAndCountBeanDao;
    }

}
